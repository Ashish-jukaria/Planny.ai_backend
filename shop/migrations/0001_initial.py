# Generated by Django 3.2.4 on 2023-03-29 13:24

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('phurti', '0001_initial'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'ACTIVE'), ('DISCARDED', 'DISCARDED'), ('ORDER_PLACED', 'ORDER_PLACED')], max_length=200, verbose_name='cartStatus')),
                ('total_price', models.DecimalField(decimal_places=4, default=0.0, max_digits=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50, verbose_name='category-name')),
                ('description', models.TextField(blank=True, max_length=200)),
                ('slug', models.SlugField(blank=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category', verbose_name='Category Image')),
                ('colour', models.CharField(blank=True, max_length=20, null=True)),
                ('home_page', models.BooleanField(default=False, verbose_name='Show this category on home page')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sub_categories', to='shop.category')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='DeliveryType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('EXPRESS_DELIVERY', 'EXPRESS_DELIVERY'), ('EVERYTHING', 'EVERYTHING'), ('TAKE_AWAY', 'TAKE_AWAY')], max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('discount_code_type', models.CharField(choices=[('A', 'ABSOLUTE'), ('P', 'PERCENTAGE')], max_length=50)),
                ('value', models.DecimalField(decimal_places=4, max_digits=20)),
                ('maximum_discount', models.IntegerField(default=0)),
                ('code', shop.models.CodeField(max_length=50, null=True, unique=True)),
                ('code_description', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('minimum_order_value', models.IntegerField(default=1)),
                ('is_applied', models.BooleanField(default=False)),
                ('apply_type', models.CharField(choices=[('cart', 'cart'), ('items', 'items')], default='cart', max_length=100)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HsnCodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(default=None, max_length=8)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('gst', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('code', models.CharField(max_length=50)),
                ('pincode', models.CharField(blank=True, max_length=10, null=True)),
                ('longitude', models.CharField(blank=True, max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('invoice_id', models.CharField(blank=True, max_length=50, null=True)),
                ('invoice_url', models.URLField(blank=True, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('fulfilment_type', models.CharField(choices=[('TAKE_AWAY', 'TAKE_AWAY'), ('DELIVERY', 'DELIVERY')], default='DELIVERY', max_length=100)),
                ('delivery_type', models.CharField(blank=True, choices=[('EXPRESS_DELIVERY', 'EXPRESS_DELIVERY'), ('EVERYTHING', 'EVERYTHING'), ('TAKE_AWAY', 'TAKE_AWAY')], default='EXPRESS', max_length=100, null=True)),
                ('payment_status', models.CharField(choices=[('PENDING', 'PENDING'), ('SUCCESS', 'SUCCESS'), ('CHECKOUT', 'CHECKOUT'), ('FAILED', 'FAILED')], default='PENDING', max_length=100)),
                ('fulfilment_address', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='Fulfilment Address')),
                ('delivery_address', models.CharField(blank=True, default=' ', max_length=1000, null=True, verbose_name='Address')),
                ('total_price', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=20, null=True)),
                ('packaging_charge', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=20, null=True)),
                ('delivery_charge', models.DecimalField(decimal_places=4, default=10.0, max_digits=20)),
                ('prescription_url', models.URLField(blank=True, null=True)),
                ('source', models.CharField(blank=True, choices=[('WEBSITE', 'WEBSITE'), ('BILLING', 'BILLING')], max_length=50, null=True)),
                ('state', models.JSONField(default={'state_list': [{'action': None, 'body': {'media_height': None, 'media_width': None, 'thumbnail_image': {'height': None, 'url': None, 'width': None}, 'value': 'Welcome to Aikam\nNow get your medicines at your doorstep with huge discount'}, 'created_on': 'March 2023, 18:54PM', 'sender': 'AIKAM', 'state_type': 'TEXT'}, {'action': 'REQUEST_CALLBACK', 'body': {'media_height': None, 'media_width': None, 'thumbnail_image': {'height': None, 'url': None, 'width': None}, 'value': None}, 'created_on': 'March 2023, 18:54PM', 'sender': 'AIKAM', 'state_type': 'REQUEST_CALLBACK'}, {'action': 'UPLOAD_PRESCRIPTION', 'body': {'media_height': None, 'media_width': None, 'thumbnail_image': {'height': None, 'url': None, 'width': None}, 'value': None}, 'created_on': 'March 2023, 18:54PM', 'sender': 'AIKAM', 'state_type': 'UPLOAD_PRESCRIPTION'}]})),
                ('status', models.CharField(choices=[('INITIALISED', 'INITIALISED'), ('CANCELLED', 'CANCELLED'), ('DELIVERED', 'DELIVERED'), ('IN_TRANSIT', 'IN_TRANSIT'), ('INVOICE_GENERATED', 'INVOICE_GENERATED'), ('ORDER_PLACED', 'ORDER_PLACED'), ('REFUND_INITIATED', 'REFUND_INITIATED'), ('REFUNDED_AND_CLOSED', 'REFUNDED_AND_CLOSED'), ('DISCARDED', 'DISCARDED')], max_length=50)),
                ('cart', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.cart', verbose_name='Cart')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.inventory')),
                ('tenant', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('source', models.CharField(choices=[('website', 'website'), ('mobile_application', 'Mobile Application'), ('BILL', 'BILL')], default='website', max_length=50, verbose_name='Payment Source')),
                ('gateway_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Payment Gateway Type')),
                ('mode', models.CharField(choices=[('upi', 'UPI'), ('cash', 'Cash'), ('netbanking', 'Netbanking'), ('electronic_cash_on_Delivery', 'ECOD'), ('wallet', 'Wallet'), ('card', 'Card')], max_length=50, verbose_name='Mode of payment')),
                ('additional_details', models.TextField(blank=True, null=True, verbose_name='Extra Payment Details')),
                ('amount', models.DecimalField(decimal_places=4, default=Decimal('0'), max_digits=20, null=True, verbose_name='Total Amount')),
                ('txn_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Transaction ID')),
                ('status', models.CharField(blank=True, choices=[('PENDING', 'PENDING'), ('SUCCESS', 'SUCCESS'), ('CHECKOUT', 'CHECKOUT'), ('FAILED', 'FAILED')], max_length=50, null=True, verbose_name='Status')),
                ('payment_date', models.DateTimeField(null=True)),
                ('product_info', models.TextField(blank=True, null=True, verbose_name='Product Info')),
                ('payment_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Payment ID')),
                ('refund_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Refund ID')),
                ('invoice_id', models.CharField(blank=True, db_index=True, max_length=50, null=True, verbose_name='Invoice ID')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_order', to='shop.order')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('product_name', models.CharField(max_length=100)),
                ('is_active_product', models.BooleanField(default=True, verbose_name='Activate Product')),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('market_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True, verbose_name='Market Price')),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active_description', models.BooleanField(default=True, verbose_name='Activate Description')),
                ('sku', models.CharField(blank=True, max_length=100, null=True)),
                ('photo', models.ImageField(default='products/phurti_hiEVV4u.PNG', null=True, upload_to='products', verbose_name='Photo')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True)),
                ('cap_on_quantity', models.DecimalField(decimal_places=2, default=3, max_digits=4)),
                ('packaging', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Salt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StockUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('unit', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_description', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WastedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=4, default=1.0, max_digits=20)),
                ('reason', models.TextField(default='None')),
                ('image', models.ImageField(null=True, upload_to='wastedproduct', verbose_name='Wasted Product')),
                ('added_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('quantity_units', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.stockunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '987654321'. Up to 15 digits allowed.", regex='^\\+?1?\\d{10,15}$')])),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('is_active', models.BooleanField(default=True)),
                ('time_slot', models.TimeField()),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, default=1.0, max_digits=20, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='customer.customer')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.inventory')),
                ('new_customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='shop.payment')),
                ('products', models.ManyToManyField(to='shop.Product')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=4, default=0.0, max_digits=20, verbose_name='stock quantity')),
                ('procurement_price_per_product', models.CharField(max_length=50, null=True)),
                ('hsn_code', models.CharField(max_length=100, null=True)),
                ('expiry', models.DateField(null=True)),
                ('batch_number', models.CharField(max_length=100, null=True)),
                ('purchase_trade_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=20)),
                ('net_rate', models.DecimalField(decimal_places=4, default=0.0, max_digits=20)),
                ('discount', models.DecimalField(decimal_places=4, default=0.0, max_digits=20)),
                ('gst', models.DecimalField(decimal_places=4, default=0.0, max_digits=20)),
                ('packaging', models.CharField(blank=True, max_length=100, null=True)),
                ('channel_invoice_number', models.CharField(max_length=50, null=True)),
                ('channel_invoice_date', models.DateField(null=True)),
                ('channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='phurti.channel')),
                ('inventory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.inventory', verbose_name='Inventory')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='stock_product')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenant')),
                ('units', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.stockunit', verbose_name='stock units')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Added by')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SellableInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('quantity_remaining', models.FloatField(default=0)),
                ('address', models.CharField(blank=True, max_length=6, null=True)),
                ('expiry', models.DateField(null=True)),
                ('batch_number', models.CharField(max_length=100, null=True)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sellable_inventories', to='shop.inventory')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='sellable_products', to='shop.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductPriceVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('price', models.DecimalField(decimal_places=4, max_digits=20, verbose_name='Our Price')),
                ('market_price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True, verbose_name='Market Price')),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField(blank=True, null=True)),
                ('sellable_inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sellable_product_price_variation', to='shop.sellableinventory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='product',
            name='composition',
            field=models.ManyToManyField(to='shop.Salt'),
        ),
        migrations.AddField(
            model_name='product',
            name='hsn_codes',
            field=models.ManyToManyField(to='shop.HsnCodes'),
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shop.manufacturer'),
        ),
        migrations.AddField(
            model_name='product',
            name='tenant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.tenant'),
        ),
        migrations.AddField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='shop.stockunit'),
        ),
        migrations.CreateModel(
            name='OrderScheduler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('schedule_time', models.DateTimeField(blank=True, null=True)),
                ('order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Order item description')),
                ('expiry', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, default=Decimal('1'), max_digits=20, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, default=Decimal('0'), max_digits=20, null=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, default=Decimal('0'), max_digits=20, null=True)),
                ('discount_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.discount')),
                ('order_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.order')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('desktop_view_image', models.ImageField(upload_to='offers', verbose_name='Desktop View Image')),
                ('tablet_view_image', models.ImageField(upload_to='offers', verbose_name='Tablet View Image')),
                ('mobile_view_image', models.ImageField(upload_to='offers', verbose_name='Mobile View Image')),
                ('action_link', models.CharField(max_length=200)),
                ('priority', models.IntegerField(default=0)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('tenant', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Invoice item description')),
                ('quantity', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=20, null=True, verbose_name='Invoice: Item Price')),
                ('invoice_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Invoice', to='shop.invoice')),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Product Name')),
                ('unit_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.stockunit', verbose_name='Unit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='invoice',
            name='order_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order'),
        ),
        migrations.CreateModel(
            name='FavouriteProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('product_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DiscountAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_on', models.CharField(choices=[('category', 'category'), ('products', 'products'), ('inventory', 'inventory'), ('customer', 'customer'), ('others', 'others')], max_length=100)),
                ('first_order_per_user', models.BooleanField(default=False)),
                ('one_time_per_user', models.BooleanField(default=False)),
                ('attribute_type', models.CharField(choices=[('promotional', 'promotional'), ('transactional', 'transactional')], default='transactional', max_length=100)),
                ('category', models.ManyToManyField(blank=True, related_name='category_discounts', to='shop.Category')),
                ('customer', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='customer_discounts')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discount_attributes', to='shop.discount')),
                ('inventory', models.ManyToManyField(blank=True, related_name='inventory_discounts', to='shop.Inventory')),
                ('product', models.ManyToManyField(blank=True, related_name='product_discounts', to='shop.Product')),
            ],
        ),
        migrations.CreateModel(
            name='DailyInventoryTracker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('quantity_remaining', models.DecimalField(decimal_places=4, default=0.0, max_digits=20, verbose_name='Quantity Remaining')),
                ('inventory_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.inventory')),
                ('product_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='Product')),
                ('quantity_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.stockunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='category',
            name='products',
            field=models.ManyToManyField(blank=True, related_name='category_products', to='shop.Product'),
        ),
        migrations.AddField(
            model_name='category',
            name='tenant',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='account.tenant'),
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=4, default=1.0, max_digits=20)),
                ('is_active', models.BooleanField(default=True)),
                ('final_price', models.DecimalField(blank=True, decimal_places=4, default=0, max_digits=20, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('discount_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.discount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cart',
            name='cartitem',
            field=models.ManyToManyField(to='shop.CartItem', verbose_name='cart'),
        ),
        migrations.AddField(
            model_name='cart',
            name='customer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cart',
            name='tenant',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='account.tenant'),
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.user'),
        ),
        migrations.AlterUniqueTogether(
            name='category',
            unique_together={('slug', 'parent')},
        ),
    ]

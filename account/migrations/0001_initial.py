# Generated by Django 3.2.4 on 2023-03-29 13:24

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '987654321'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('C', 'CUSTOMER'), ('DP', 'DELIVERYPARTNER'), ('SK', 'STOREMANAGER'), ('ADMIN', 'ADMIN')], max_length=30, null=True)),
                ('username', models.CharField(blank=True, default='', max_length=40)),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('device_id', models.CharField(blank=True, max_length=200, null=True)),
                ('attributes', models.JSONField(default={'ADDRESSES': [{'address': None, 'id': 0, 'label': None, 'landmark': None, 'phone_number': None, 'pincode': None, 'primary': True, 'verified': True}], 'EMAILS': [{'email': None, 'id': 0, 'label': None, 'primary': True, 'verified': True}], 'PHONE_NUMBERS': [{'id': 0, 'label': None, 'phone_number': None, 'primary': True, 'verified': True}]})),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.CharField(max_length=6, null=True)),
                ('comments', models.TextField(max_length=200, null=True)),
                ('feedback_image', models.ImageField(blank=True, null=True, upload_to='feedback', verbose_name='Feedback Image')),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6)),
                ('otp_verified', models.BooleanField(default=False)),
                ('type', models.CharField(choices=[('E', 'EMAIL'), ('S', 'SMS'), ('V', 'VOICE')], max_length=15)),
                ('resend_count', models.CharField(default=3, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('C', 'CONTRACTOR'), ('D', 'DRIVER')], max_length=30)),
            ],
            options={
                'verbose_name': 'Staff',
                'verbose_name_plural': 'Staffs',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('billing_cycle', models.CharField(choices=[('MONTHLY', '1'), ('QUARTER', '3'), ('HALF-YEARLY', '6'), ('YEARLY', 'C')], max_length=20)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Tenant Categories',
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(choices=[('CREDIT', 'CREDIT'), ('DEBIT', 'DEBIT')], max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_balance', models.DecimalField(decimal_places=2, default=50000, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('SUCCESS', 'SUCCESS'), ('FAILED', 'FAILED')], default='PENDING', max_length=50, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('closing_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.transactiontype')),
                ('wallet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.wallet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TenantUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '987654321'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('is_verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('role', models.CharField(blank=True, choices=[('C', 'CUSTOMER'), ('DP', 'DELIVERYPARTNER'), ('SK', 'STOREMANAGER'), ('ADMIN', 'ADMIN')], max_length=30, null=True)),
                ('username', models.CharField(blank=True, default='', max_length=50)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('groups', models.ManyToManyField(blank=True, null=True, related_name='tenant_users', to='auth.Group')),
                ('user_permissions', models.ManyToManyField(blank=True, null=True, related_name='tenant_users', to='auth.Permission')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('custom_domain', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('address', models.TextField()),
                ('logo_url', models.ImageField(upload_to='')),
                ('subdomain', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('admins', models.ManyToManyField(related_name='tenants', to='account.TenantUser')),
                ('owner_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tenant_category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='account.tenantcategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubscriptionDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('start_date', models.DateTimeField(default=datetime.datetime.now)),
                ('end_date', models.DateTimeField()),
                ('status', models.CharField(choices=[('ACTIVE', 'A'), ('CANCELLED', 'C'), ('EXPIRED', 'E')], max_length=20)),
                ('subscription_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.subscription')),
                ('tenant_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
